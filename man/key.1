.ll 6i
.pl 10.5i
.\"	@(#)key.1	1.1 	 10/28/93
.\"
.lt 6.0i
.TH KEY 1 "28 October 1993"
.AT 3
.SH NAME
key \-  Stand\-alone program for computing responses to S/Key challenges.
.SH SYNOPSIS
.B key [-l logfile] [-d] [-h] [-v] [\-n <count>] [\-p <password>] <Sequence> <key> 
.SH DESCRIPTION
.I key
Takes the optional count  of the number of one time access 
passwords to print
along with a (maximum) sequence number and key as command line args, 
it prompts for the user's secret password (if not used on command line),
and produces both word and hex format responses.
.SH EXAMPLE
.sh
  Usage example:
.sp 0
 	>key \-n 5 99 th91334
.sp 0
 	Enter password: <your secret password is entered here>
.sp 0
 	OMEN US HORN OMIT BACK AHOY
.sp 0
	.... 4 more passwords.
.sp 0
 	>
.LP
.SH OPTIONS
.LP
.B \-n <count>
the number of one time access passwords to print.
The default is one.

.B \-d
Increase debugging level by one. May be specified multiple times.
Debugging level 1 will show entry/exit point of every function.
Level 2 will also show return values about to be returned from
functions.  Level 3 will also show arguments passed to functions.
All debugging output should go to stderr by default.  As there are
many possible functions to add debugging to, you should instrument
at least ten (10) such functions, including main().  Ensure that
each function you instrument is actually called during a common use
of the skey tool, so as to prove that your instrumentation for
debugging is working.(taken from hw3 description)

.B \-v
To display a version number of the package

.B \-h
Print out help message

.B \-l <logfile>
Redirect debugging output to a logfile.

.B \-p <password>
user's secret password.
.SH DIAGNOSTICS
.SH BUGS
It is an obvious security hazard to enter your secret password on 
the command line (-p option).
.LP
.SH SEE ALSO
.BR skey(1),
.BR keyinit(1),
.BR keysu(1),
.BR keyinfo(1)
.SH AUTHOR
Phil Karn, Neil M. Haller, John S. Walden, Scott Chasin
